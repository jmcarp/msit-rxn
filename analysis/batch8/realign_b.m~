function realign_b

global CCN;
clear matlabbatch;

% Files
data = expandpath(CCN.ffiles);
data = volseq(data, false);

% Estimation options
eopts = spm_get_defaults('realign.estimate');
if isfield(CCN.realign, 'eopts')
    eopts = catstruct(eopts, CCN.realign.eopts);
end

if isfield(CCN.realign, 'unwarp') && ...
        CCN.realign.unwarp == true
    
    ueopts = spm_get_defaults('unwarp.estimate');
    if isfield(CCN.realign
    
    matlabbatch{1}.spm.spatial.realignunwarp = data;
    matlabbatch{1}.spm.spatial.realignunwarp.uwroptions.prefix = 'r';
    
else

    % Write options
    wopts = spm_get_defaults('realign.write');
    if isfield(CCN.realign, 'wopts')
        wopts = catstruct(wopts, CCN.realign.wopts);
    end

    if ~CCN.realign.reslice
        matlabbatch{1}.spm.spatial.realign.estimate.data = data;
        matlabbatch{1}.spm.spatial.realign.estimate.eoptions = eopts;
    else
        matlabbatch{1}.spm.spatial.realign.estwrite.data = data;
        matlabbatch{1}.spm.spatial.realign.estwrite.eoptions = eopts;
        matlabbatch{1}.spm.spatial.realign.estwrite.woptions = wopts;
    end
    
end

% Run
spm_jobman('run', matlabbatch);